service: ${env:ServiceName}
frameworkVersion: '2'

provider:
  name: aws
  stage: ${env:Stage}
  region: ${env:Region}
  runtime: python3.7
  timeout: 600
  memorySize: 1024
  apiKeys:
    - ${env:ServiceName}
  apiGateway:
    shouldStartNameWithService: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "s3:*"
        - "glue:*"
      Resource: '*'
  lambdaHashingVersion: '20201221'
  tags:
    developer: 'YuyaIsoda'

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: non-linux
    slim: true
    zip: true
  environment:
    dev: ${file(./env/dev.yml)}
    prod: ${file(./env/prod.yml)}

package:
  include:
    - aws_common.py
    - handler.py
    - h_conf.py
    - h_wordcloud.py
    - mask/*
  exclude:
    - '**'

functions:
  create:
    handler: handler.m_create_wordcloud
    description: 'Create WordCloud'
    environment: ${self:custom.environment.${self:provider.stage}}
    layers:
      - 'arn:aws:lambda:us-east-1:xxxxxxxxxxxxx:layer:wordcloud:4'
    events:
      - schedule: cron(0 9 ? * MON-FRI *)
      - http:
          path: wordcloud
          method: POST
          private: true

resources:
  Resources:
    Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${env:Bucket}
        
